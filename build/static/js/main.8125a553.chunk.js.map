{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Filter.js","components/Notification.js","services/people.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","name","person","number","handleClick","onClick","Filter","filter","handleFilterChange","successStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","Notification","message","error","style","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notificationMsg","setNotificationMsg","setError","useEffect","peopleService","initialPersons","event","target","preventDefault","personObject","map","includes","personId","find","n","window","confirm","returnedPerson","setTimeout","changeNumber","concat","toUpperCase","key","catch","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8125a553.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n        <div>\n            name: <input\n            value={props.newName}\n            onChange={props.handleNameChange} />\n        </div>\n        <div>\n            number: <input\n            value={props.newNumber}\n            onChange={props.handleNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (props) => {\n  const name = props.person.name\n  const number = props.person.number\n  const handleClick = props.handleClick\n\n  return (\n    <li>\n      {name} {number}\n      <button onClick={handleClick}>delete</button>  \n    </li>\n  )\n}\n  \nexport default Person","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n      <div>\n        filter shown with <input \n          value={props.filter}\n          onChange={props.handleFilterChange}\n          />\n      </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        error\n        ? <div style={errorStyle}>{ message }</div>\n        : <div style={successStyle}>{ message }</div>\n    )\n}\n\nconst successStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nconst errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\n\nconst getAll = () => (\n    axios.get(baseUrl)\n        .then(response => response.data)\n)\n\nconst create = newObject => (\n    axios.post(baseUrl, newObject)\n        .then(response => response.data)\n)\n\nconst del = id => (\n    axios.delete(`${baseUrl}/${id}`)\n        .then(response => response.data)\n)\n\nconst update = (id, newObject) => (\n    axios.put(`${baseUrl}/${id}`, newObject)\n        .then(response => response.data)\n)\n\n\nexport default { getAll, create, del, update }","import React, { useEffect, useState } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport peopleService from './services/people'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notificationMsg, setNotificationMsg] = useState(null)\n  const [ error, setError] = useState(false)\n  \n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const changeNumber = () => {\n      const personId = persons.find(n => n.name === personObject.name).id\n      window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n        && peopleService.update(personId, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(n => n.name !== personObject.name ? n : returnedPerson))\n            setError(false)\n            setNotificationMsg(`Changed number for ${personObject.name}`)\n            setTimeout(() => setNotificationMsg(null), 2000)\n          })\n    }\n\n    persons\n      .map(person => person.name)  \n        .includes(personObject.name) \n          ? changeNumber()\n          : peopleService\n              .create(personObject)\n              .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                setNewName('')\n                setNewNumber('')}) \n                setError(false)\n                setNotificationMsg(`Added ${personObject.name}`)\n                setTimeout(() => setNotificationMsg(null), 2000)\n  }\n\n  const handleNameChange = event => setNewName(event.target.value)\n\n  const handleNumberChange = event => setNewNumber(event.target.value)\n\n  const handleFilterChange = event => setFilter(event.target.value)\n\n  const handleDelete = person => {\n    window.confirm(`Delete ${person.name} ?`) \n      && peopleService.del(person.id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== person.id))\n          setError(false)\n          setNotificationMsg(`Deleted ${person.name}`)\n          setTimeout(() => setNotificationMsg(null), 2000)})\n        .catch(error => {\n          setError(true)\n          setNotificationMsg(`Information of ${person.name} has already been removed from server`)\n          setTimeout(() => setNotificationMsg(null), 2000)\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMsg} error={error}/>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      \n      <h2>Add a new</h2>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <ul>\n        {persons\n          .filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\n          .map((person) => \n            <Person key={person.name} person={person} handleClick={() => handleDelete(person)}/>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}